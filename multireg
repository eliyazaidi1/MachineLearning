
### Multiple Linear Regression on Diabetes Dataset

#Features in dataset
* Preg: Number of times pregnant
* Glucose: Plasma glucose concentration a 2 hours in an oral glucose tolerance test
* BloodPressure: Diastolic blood pressure (mm Hg)
* SkinThickness: Triceps skin fold thickness (mm)
* Insulin: 2-Hour serum insulin (mu U/ml)
* BMI: Body mass index (weight in kg/(height in m)^2)
* DiabetesPedigreeFunction: Diabetes pedigree function
* Age: Age (years)
* Outcome: Class variable (0 or 1)

import matplotlib.pyplot as plt
from sklearn import linear_model
from sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score
import pandas as pd
import numpy as np

diabetes = pd.read_csv("diabetes.csv")

diabetes.head()

diabetes_X = diabetes[["BloodPressure","Age"]]
diabetes_y = diabetes["Glucose"]

print(diabetes_X.shape, diabetes_y.shape)


from sklearn.model_selection import train_test_split

 X_train, X_test, y_train, y_test = train_test_split(diabetes_X, diabetes_y, test_size=0.2)

 X_train.shape, X_test.shape, y_train.shape, y_test.shape



regr = linear_model.LinearRegression()

regr.fit(X_train, y_train)

y_pred = regr.predict(X_test)

print('Coefficients: ', regr.coef_)

print('Intercept: ', regr.intercept_)

mse = mean_squared_error(y_pred,y_test)
rmse=np.sqrt(mean_squared_error(y_pred,y_test))
mae = mean_absolute_error(y_pred,y_test)li
r2 = r2_score(y_pred,y_test)
print("Performance Metrics:\n\tMean squared error:\t{}\n\tRoot Mean squared error:{}\n\tMean absolute error:\t{}\n\tR2-score:\t\t{}".format(mse,rmse,mae,r2))

